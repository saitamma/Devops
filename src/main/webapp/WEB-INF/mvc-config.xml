<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:encryption="http://www.jasypt.org/schema/encryption"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.jasypt.org/schema/encryption http://www.jasypt.org/schema/encryption/jasypt-spring31-encryption-1.xsd">

	<!-- Scans within the base package of the application for @Components to configure as beans -->
	<!-- @Controller, @Service, @Configuration, etc. -->
	<context:component-scan base-package="com.cisco.ca.cstg.pdi" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- Turn off working out content type based on URL file extension, should fall back to looking at the Accept headers -->
		<property name="favorPathExtension" value="false" />
	</bean>
	<mvc:interceptors>
		<bean class="com.cisco.ca.cstg.pdi.interceptor.LicensePresenceInterceptor" />
	</mvc:interceptors>
	<context:annotation-config />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- Hibernate configuration -->
	<bean id="hibernateSessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="mappingDirectoryLocations">
			<value>WEB-INF/classes/mappings</value>
		</property>
		<property name="packagesToScan" value="com.cisco.ca.cstg.pdi.pojos"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					com.cisco.ca.cstg.pdi.utils.MySqlDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.c3p0.minPoolSize">5</prop>
				<prop key="hibernate.c3p0.maxPoolSize">20</prop>
				<prop key="hibernate.c3p0.timeout">600</prop>
				<prop key="hibernate.c3p0.max_statement">50</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckout">false</prop>
			</props>
		</property>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="propertyConfigurer"
		class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEncryptor" />
		<property name="locations">
			<list>
				<value>classpath:pdi.properties</value>
			</list>
		</property>
	</bean>

	<!-- Configuration for encryptor. -->
	<bean id="environmentVariablesConfiguration"
		class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<property name="password">
			<value>cisco$123</value>
		</property> 
	</bean>

	<!-- The will be the encryptor used for decrypting configuration values. -->
	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="environmentVariablesConfiguration" />
	</bean>
	
	<bean id="systemProperties"
	class="org.springframework.beans.factory.config.PropertiesFactoryBean" />

	<bean id="systemEnvironment"
	class="org.springframework.beans.factory.config.PropertiesFactoryBean" />
	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/MySQLDS"/>
    </bean>

	<!-- File Upload size limit -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- Max size in bytes. -->
		<property name="maxUploadSize" value="100000000" />
	</bean>
</beans>